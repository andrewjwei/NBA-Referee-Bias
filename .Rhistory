temp0$Freq[temp0$Var1 == "NTPC/NHPC/NLC"] <- temp0$Freq[temp0$Var1 == "NTPC/NHPC/NLC"]/sum(temp0$Freq[temp0$Var1 == "NTPC/NHPC/NLC"])*100
temp0$Freq[temp0$Var1 == "SECI"] <- temp0$Freq[temp0$Var1 == "SECI"]/sum(temp0$Freq[temp0$Var1 == "SECI"])*100
ggplot(temp0, aes(x = factor(1), y = Freq, fill = factor(Var2))) +
geom_bar(stat = "identity", width = 1) +
theme(legend.position = "top") +
scale_x_discrete(NULL, expand = c(0,0)) +
scale_y_continuous(NULL, expand = c(0,0)) +
coord_polar(theta = "y") +
facet_wrap(~Var1)
temp0 <- table(Auctions$auction_year, Auctions$auction_status) %>% data.frame()
ggplot(temp0, aes(fill=Var2, y=Freq, x=Var1)) +
geom_bar(position="dodge", stat="identity")
temp <- merge(Auctions %>% filter(cancelled) %>% count(auction_year),
Auctions %>% count(auction_year), all = TRUE, by = "auction_year")
temp$pc <- 0
temp$pc <- temp$n.x/temp$n.y
ggplot(temp) + geom_line(aes(x =auction_year , y = pc))
Auctions$Change_in_final_capacity = Auctions$capacity_sought_mw - Auctions$total_capacity_allocated_mw
table(Auctions$Change_in_final_capacity <0, Auctions$oversubscription > 0)
temp1 <- Bids[Bids$auction_id %in% Auctions$auction_id[Auctions$Change_in_final_capacity == 0],]
temp1 <- temp1[!is.na(temp1$capacity_allocated_mw) & !is.na(temp1$capacity_bid_mw )  ,]
table(temp1$capacity_allocated_mw == 0)
table(temp1$capacity_bid_mw == temp1$capacity_allocated_mw)
table(Auctions$Change_in_final_capacity >0)
temp0 <- table(Auctions$auction_year, Auctions$ceiling_tariff_exists) %>% data.frame()
ggplot(temp0, aes(fill=Var2, y=Freq, x=Var1)) +
geom_bar(position="dodge", stat="identity")
temp <- merge(Auctions %>% filter(ceiling_tariff_exists == 1) %>% count(auction_year),
Auctions %>% filter(ceiling_tariff_exists == 0) %>% count(auction_year), all = TRUE, by = "auction_year")
temp <- merge(temp,
Auctions %>% filter(ceiling_tariff_exists %>% is.na()) %>% count(auction_year), all = TRUE, by = "auction_year")
ggplot(temp) + geom_bar(aes(fill="1", y=n.x, x=auction_year), position="dodge", stat="identity")+ geom_bar(aes(fill="0", y=n.y, x=auction_year), position="dodge", stat="identity") + geom_bar(aes(fill="NA", y=n, x=auction_year), position="dodge", stat="identity")
temp <- merge(Auctions %>% filter(ceiling_tariff_exists == 1) %>% count(auction_year),
Auctions %>% count(auction_year), all = TRUE, by = "auction_year")
temp$pc <- 0
temp$pc <- temp$n.x/temp$n.y
ggplot(temp) + geom_line(aes(x =auction_year , y = pc))
Projects <-read.csv("C:\\Users\\16wei\\Dropbox (Personal)\\solar_auctions\\analysis\\data\\bridgeToIndia\\clean\\projects.csv")
Projects$actual_COD
Projects$ac_capacity_mw <- as.Date.factor(Projects$ac_capacity_mw)
Projects$ac_capacity_mw <- as.Date(as.character(Projects$ac_capacity_mw))
Projects$ac_capacity_mw <- as.Date(as.character(Projects$ac_capacity_mw), "%Y-%m-%d")
Projects$ac_capacity_mw
Projects$ac_capacity_mw <- as.Date(as.character(Projects$ac_capacity_mw), "%Y-%M-%D")
Projects <-read.csv("C:\\Users\\16wei\\Dropbox (Personal)\\solar_auctions\\analysis\\data\\bridgeToIndia\\clean\\projects.csv")
as.Date(as.character(Projects$ac_capacity_mw), "%Y-%M-%D")
as.Date(as.character(Projects$actual_COD), "%Y-%M-%D")
Projects$actual_COD
as.character(Projects$actual_COD)
as.Date(as.character(Projects$actual_COD), "%Y-%M-%D")
as.numeric(left(as.character(Projects$actual_COD), 4))
as.numeric(Strleft(as.character(Projects$actual_COD), 4))
as.numeric(substr(as.character(Projects$actual_COD), 1,4))
Auctions$auction_status
Projects$Year <- as.numeric(substr(as.character(Projects$actual_COD), 1,4))
temp <- data.frame()
for(year in 2013:2020)
{
temp$Commissioned_From_Auctions[year-2012] <-
Auctions$capacity_sought_mw[Auctions$auction_year >= year & !Auctions$Cancelled] %>% sum()
temp$Allocated_From_Auctions[year-2012] <-
Auctions$capacity_allocated_mw[Auctions$auction_year >= year] %>% sum()
temp$Total_Project_Capacity[year-2012] <-
Projects$ac_capacity_mw[Auctions$Projects$Year >= year] %>% sum()
}
Auctions$Cancelled
for(year in 2013:2020)
{
temp$Commissioned_From_Auctions[year-2012] <-
Auctions$capacity_sought_mw[Auctions$auction_year >= year & !Auctions$cancelled] %>% sum()
temp$Allocated_From_Auctions[year-2012] <-
Auctions$capacity_allocated_mw[Auctions$auction_year >= year] %>% sum()
temp$Total_Project_Capacity[year-2012] <-
Projects$ac_capacity_mw[Auctions$Projects$Year >= year] %>% sum()
}
!Auctions$cancelled
Projects$ac_capacity_mw[Auctions$Projects$Year >= year]
Projects$ac_capacity_mw[Auctions$Projects$Year >= 2012]
Projects$ac_capacity_mw[Auctions$Projects$Year >= 2017]
Projects$ac_capacity_mw
Projects$ac_capacity_mw[Auctions$Projects$Year >= year]
Auctions$Projects$Year
Projects$Year <- as.numeric(substr(as.character(Projects$actual_COD), 1,4))
temp <- data.frame()
for(year in 2013:2020)
{
temp$Commissioned_From_Auctions[year-2012] <-
Auctions$capacity_sought_mw[Auctions$auction_year >= year & !Auctions$cancelled] %>% sum()
temp$Allocated_From_Auctions[year-2012] <-
Auctions$capacity_allocated_mw[Auctions$auction_year >= year] %>% sum()
temp$Total_Project_Capacity[year-2012] <-
Projects$ac_capacity_mw[Projects$Year >= year] %>% sum()
}
Auctions$capacity_sought_mw[Auctions$auction_year >= year & !Auctions$cancelled]
Projects$Year <- as.numeric(substr(as.character(Projects$actual_COD), 1,4))
temp <- data.frame()
for(year in 2013:2020)
{
temp$Commissioned_From_Auctions[year-2012] <-
Auctions$capacity_sought_mw[Auctions$auction_year >= year & !Auctions$cancelled] %>%
sum(na.rm = TRUE)
temp$Allocated_From_Auctions[year-2012] <-
Auctions$capacity_allocated_mw[Auctions$auction_year >= year] %>%
sum(na.rm = TRUE)
temp$Total_Project_Capacity[year-2012] <-
Projects$ac_capacity_mw[Projects$Year >= year] %>%
sum(na.rm = TRUE)
}
temp$Commissioned_From_Auctions[year-2012] <-
Auctions$capacity_sought_mw[Auctions$auction_year >= year & !Auctions$cancelled] %>%
sum(na.rm = TRUE)
Auctions$capacity_sought_mw[Auctions$auction_year >= year & !Auctions$cancelled] %>%
sum(na.rm = TRUE)
Projects$Year <- as.numeric(substr(as.character(Projects$actual_COD), 1,4))
temp <- data.frame()
for(year in 2013:2020)
{
temp$Commissioned_From_Auctions[year-2012] <-
Auctions$capacity_sought_mw[(Auctions$auction_year >= year) & (!Auctions$cancelled)] %>%
sum(na.rm = TRUE)
temp$Allocated_From_Auctions[year-2012] <-
Auctions$capacity_allocated_mw[Auctions$auction_year >= year] %>%
sum(na.rm = TRUE)
temp$Total_Project_Capacity[year-2012] <-
Projects$ac_capacity_mw[Projects$Year >= year] %>%
sum(na.rm = TRUE)
}
Projects$Year <- as.numeric(substr(as.character(Projects$actual_COD), 1,4))
temp <- data.frame(Commissioned_From_Auctions = numeric(0),
Allocated_From_Auctions = numeric(0),
Total_Project_Capacity = numeric(0))
for(year in 2013:2020)
{
temp$Commissioned_From_Auctions[year-2012] <-
Auctions$capacity_sought_mw[(Auctions$auction_year >= year) & (!Auctions$cancelled)] %>%
sum(na.rm = TRUE)
temp$Allocated_From_Auctions[year-2012] <-
Auctions$capacity_allocated_mw[Auctions$auction_year >= year] %>%
sum(na.rm = TRUE)
temp$Total_Project_Capacity[year-2012] <-
Projects$ac_capacity_mw[Projects$Year >= year] %>%
sum(na.rm = TRUE)
}
Projects$Year <- as.numeric(substr(as.character(Projects$actual_COD), 1,4))
temp <- data.frame(Commissioned_From_Auctions = NA,
Allocated_From_Auctions = NA,
Total_Project_Capacity = NA)
for(year in 2013:2020)
{
temp$Commissioned_From_Auctions[year-2012] <-
Auctions$capacity_sought_mw[(Auctions$auction_year >= year) & (!Auctions$cancelled)] %>%
sum(na.rm = TRUE)
temp$Allocated_From_Auctions[year-2012] <-
Auctions$capacity_allocated_mw[Auctions$auction_year >= year] %>%
sum(na.rm = TRUE)
temp$Total_Project_Capacity[year-2012] <-
Projects$ac_capacity_mw[Projects$Year >= year] %>%
sum(na.rm = TRUE)
}
Auctions$capacity_allocated_mw
Projects$Year <- as.numeric(substr(as.character(Projects$actual_COD), 1,4))
temp <- data.frame(Commissioned_From_Auctions = NA,
Allocated_From_Auctions = NA,
Total_Project_Capacity = NA)
for(year in 2013:2020)
{
temp$Commissioned_From_Auctions[year-2012] <-
Auctions$capacity_sought_mw[(Auctions$auction_year >= year) & (!Auctions$cancelled)] %>%
sum(na.rm = TRUE)
temp$Allocated_From_Auctions[year-2012] <-
Auctions$capacity_allocated_mw[Auctions$auction_year >= year] %>%
as.character() %>% as.numeric() %>%
sum(na.rm = TRUE)
temp$Total_Project_Capacity[year-2012] <-
Projects$ac_capacity_mw[Projects$Year >= year] %>%
sum(na.rm = TRUE)
}
Auctions$capacity_sought_mw[(Auctions$auction_year >= year) & (!Auctions$cancelled)] %>%
sum(na.rm = TRUE)
temp$Commissioned_From_Auctions[year-2012]
replacement has 2 rows, data has 1
rep(NA.len(years)),
rep(NA.len(years))
rep(NA,len(years))
rep(NA,lelength(years))
rep(NA,length(years))
years = 2013:2020
rep(NA,length(years))
Projects$Year <- as.numeric(substr(as.character(Projects$actual_COD), 1,4))
years = 2013:2020
temp <- data.frame(Commissioned_From_Auctions =rep(NA,length(years)),
Allocated_From_Auctions = rep(NA,length(years)),
Total_Project_Capacity = rep(NA,length(years))    )
for(year in years)
{
temp$Commissioned_From_Auctions[year-2012] <-
Auctions$capacity_sought_mw[(Auctions$auction_year >= year) & (!Auctions$cancelled)] %>%
sum(na.rm = TRUE)
temp$Allocated_From_Auctions[year-2012] <-
Auctions$capacity_allocated_mw[Auctions$auction_year >= year] %>%
as.character() %>% as.numeric() %>%
sum(na.rm = TRUE)
temp$Total_Project_Capacity[year-2012] <-
Projects$ac_capacity_mw[Projects$Year >= year] %>%
sum(na.rm = TRUE)
}
temp
source('~/.active-rstudio-document', echo=TRUE)
temp <- data.frame(Commissioned_From_Auctions =rep(NA,length(years)),
Allocated_From_Auctions = rep(NA,length(years)),
Total_Project_Capacity = rep(NA,length(years)),
Year = years   )
for(year in years)
{
temp$Commissioned_From_Auctions[year-2012] <-
Auctions$capacity_sought_mw[(Auctions$auction_year >= year) & (!Auctions$cancelled)] %>%
sum(na.rm = TRUE)
temp$Allocated_From_Auctions[year-2012] <-
Auctions$capacity_allocated_mw[Auctions$auction_year >= year] %>%
as.character() %>% as.numeric() %>%
sum(na.rm = TRUE)
temp$Total_Project_Capacity[year-2012] <-
Projects$ac_capacity_mw[Projects$Year >= year] %>%
sum(na.rm = TRUE)
}
for(year in years) {
temp$Commissioned_From_Auctions[year-2012] <-
Auctions$capacity_sought_mw[(Auctions$auction_year >= year) & (!Auctions$cancelled)] %>%
sum(na.rm = TRUE)
temp$Allocated_From_Auctions[year-2012] <-
Auctions$capacity_allocated_mw[Auctions$auction_year >= year] %>%
as.character() %>% as.numeric() %>%
sum(na.rm = TRUE)
temp$Total_Project_Capacity[year-2012] <-
Projects$ac_capacity_mw[Projects$Year >= year] %>%
sum(na.rm = TRUE)
}
ggplot(temp) + geom_bar(aes(x = Year, y = ac_capacity_mw))
ggplot(temp) + geom_bar(aes(x = Year, y = ac_capacity_mw))
ggplot(temp) + geom_bar(aes(x = Year, y = Total_Project_Capacity))
ggplot(temp) + geom_bar(aes(y = Year))
ggplot(temp) + geom_bar(aes(y = Year, x = Total_Project_Capacity))
ggplot(temp) + geom_point(aes(y = Year, x = Total_Project_Capacity))
ggplot(temp) + geom_line(aes(x = Year, y = Total_Project_Capacity))
temp
ggplot(temp) + geom_line(aes(x = Year, y = Allocated_From_Auctions))
Projects$Year <- as.numeric(substr(as.character(Projects$actual_COD), 1,4))
years = 2013:2020
temp <- data.frame(Commissioned_From_Auctions =rep(NA,length(years)),
Allocated_From_Auctions = rep(NA,length(years)),
Total_Project_Capacity = rep(NA,length(years)),
Year = years   )
for(year in years) {
temp$Commissioned_From_Auctions[year-2012] <-
Auctions$capacity_sought_mw[(Auctions$auction_year <= year) & (!Auctions$cancelled)] %>%
sum(na.rm = TRUE)
temp$Allocated_From_Auctions[year-2012] <-
Auctions$capacity_allocated_mw[Auctions$auction_year <= year] %>%
as.character() %>% as.numeric() %>%
sum(na.rm = TRUE)
temp$Total_Project_Capacity[year-2012] <-
Projects$ac_capacity_mw[Projects$Year <= year] %>%
sum(na.rm = TRUE)
}
ggplot(temp) + geom_line(aes(x = Year, y = Allocated_From_Auctions))
ggplot(temp) + geom_bar(aes(x = Year, y = Allocated_From_Auctions))
+ geom_line(aes(x = Year, y = Commissioned_From_Auctions))
ggplot(temp) + geom_line(aes(x = Year, y = Allocated_From_Auctions))
ggplot(temp) + geom_line(aes(x = Year, y = Allocated_From_Auctions))+
geom_line(aes(x = Year, y = Commissioned_From_Auctions))+
geom_line(aes(x = Year, y = Total_Project_Capacity))
ggplot(temp) + geom_line(aes(x = Year, y = Allocated_From_Auctions, col = "blue"))+
geom_line(aes(x = Year, y = Commissioned_From_Auctions, col = "green"))+
geom_line(aes(x = Year, y = Total_Project_Capacity, col = "red"))
Projects$Year <- as.numeric(substr(as.character(Projects$actual_COD), 1,4))
years = 2013:2020
temp <- data.frame(Commissioned_From_Auctions =rep(NA,length(years)),
Allocated_From_Auctions = rep(NA,length(years)),
Total_Project_Capacity = rep(NA,length(years)),
Year = years   )
for(year in years) {
temp$Commissioned_From_Auctions[year-2012] <-
Auctions$capacity_sought_mw[(Auctions$auction_year <= year) & (!Auctions$cancelled)] %>%
sum(na.rm = TRUE)
temp$Allocated_From_Auctions[year-2012] <-
Auctions$capacity_allocated_mw[Auctions$auction_year <= year] %>%
as.character() %>% as.numeric() %>%
sum(na.rm = TRUE)
temp$Total_Project_Capacity[year-2012] <-
Projects$ac_capacity_mw[Projects$Year <= year] %>%
sum(na.rm = TRUE)
}
ggplot(temp) + geom_line(aes(x = Year, y = Allocated_From_Auctions, col = "Allocated_From_Auctions"))+
geom_line(aes(x = Year, y = Commissioned_From_Auctions, col = "Commissioned_From_Auctions"))+
geom_line(aes(x = Year, y = Total_Project_Capacity, col = "Total_Project_Capacity"))
Projects$Year <- as.numeric(substr(as.character(Projects$actual_COD), 1,4))
years = 2013:2020
temp <- data.frame(Commissioned_From_Auctions =rep(NA,length(years)),
Allocated_From_Auctions = rep(NA,length(years)),
Total_Project_Capacity = rep(NA,length(years)),
Year = years   )
for(year in years) {
temp$Commissioned_From_Auctions[year-2012] <-
Auctions$capacity_allocated_mw[(Auctions$auction_year <= year) & (!Auctions$cancelled)] %>%
sum(na.rm = TRUE)
temp$Allocated_From_Auctions[year-2012] <-
Auctions$capacity_allocated_mw[Auctions$auction_year <= year] %>%
as.character() %>% as.numeric() %>%
sum(na.rm = TRUE)
temp$Total_Project_Capacity[year-2012] <-
Projects$ac_capacity_mw[Projects$Year <= year] %>%
sum(na.rm = TRUE)
}
Projects$Year <- as.numeric(substr(as.character(Projects$actual_COD), 1,4))
years = 2013:2020
temp <- data.frame(Commissioned_From_Auctions =rep(NA,length(years)),
Allocated_From_Auctions = rep(NA,length(years)),
Total_Project_Capacity = rep(NA,length(years)),
Year = years   )
for(year in years) {
temp$Commissioned_From_Auctions[year-2012] <-
Auctions$capacity_sought_mw[(Auctions$auction_year <= year) & (!Auctions$cancelled)] %>%
sum(na.rm = TRUE)
temp$Allocated_From_Auctions[year-2012] <-
Auctions$capacity_allocated_mw[Auctions$auction_year <= year] %>%
as.character() %>% as.numeric() %>%
sum(na.rm = TRUE)
temp$Total_Project_Capacity[year-2012] <-
Projects$ac_capacity_mw[Projects$Year <= year] %>%
sum(na.rm = TRUE)
}
ggplot(temp) + geom_line(aes(x = Year, y = Allocated_From_Auctions, col = "Allocated_From_Auctions"))+
geom_line(aes(x = Year, y = Commissioned_From_Auctions, col = "Commissioned_From_Auctions"))+
geom_line(aes(x = Year, y = Total_Project_Capacity, col = "Total_Project_Capacity"))
Projects$Year <- as.numeric(substr(as.character(Projects$actual_COD), 1,4))
years = 2013:2020
temp <- data.frame(Commissioned_From_Auctions =rep(NA,length(years)),
Allocated_From_Auctions = rep(NA,length(years)),
Total_Project_Capacity = rep(NA,length(years)),
Year = years   )
for(year in years) {
temp$Commissioned_From_Auctions[year-2012] <-
Auctions$capacity_sought_mw[(Auctions$auction_year <= year) & (!Auctions$cancelled)] %>%
as.character() %>% as.numeric() %>%
sum(na.rm = TRUE)
temp$Allocated_From_Auctions[year-2012] <-
Auctions$capacity_allocated_mw[Auctions$auction_year <= year] %>%
as.character() %>% as.numeric() %>%
sum(na.rm = TRUE)
temp$Total_Project_Capacity[year-2012] <-
Projects$ac_capacity_mw[Projects$Year <= year] %>%
sum(na.rm = TRUE)
}
ggplot(temp) + geom_line(aes(x = Year, y = Allocated_From_Auctions, col = "Allocated_From_Auctions"))+
geom_line(aes(x = Year, y = Commissioned_From_Auctions, col = "Commissioned_From_Auctions"))+
geom_line(aes(x = Year, y = Total_Project_Capacity, col = "Total_Project_Capacity"))
Projects$Year <- as.numeric(substr(as.character(Projects$actual_COD), 1,4))
years = 2013:2020
temp <- data.frame(Commissioned_From_Auctions =rep(NA,length(years)),
Allocated_From_Auctions = rep(NA,length(years)),
Total_Project_Capacity = rep(NA,length(years)),
Year = years   )
for(year in years) {
temp$Commissioned_From_Auctions[year-2012] <-
Auctions$capacity_allocated_mw[(Auctions$auction_year <= year) & (!Auctions$cancelled)] %>%
as.character() %>% as.numeric() %>%
sum(na.rm = TRUE)
temp$Allocated_From_Auctions[year-2012] <-
Auctions$capacity_allocated_mw[Auctions$auction_year <= year] %>%
as.character() %>% as.numeric() %>%
sum(na.rm = TRUE)
temp$Total_Project_Capacity[year-2012] <-
Projects$ac_capacity_mw[Projects$Year <= year] %>%
sum(na.rm = TRUE)
}
ggplot(temp) + geom_line(aes(x = Year, y = Allocated_From_Auctions, col = "Allocated_From_Auctions"))+
geom_line(aes(x = Year, y = Commissioned_From_Auctions, col = "Commissioned_From_Auctions"))+
geom_line(aes(x = Year, y = Total_Project_Capacity, col = "Total_Project_Capacity"))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("analysis_multiyear.R")
library(stargazer)
library(dplyr)
library(ggplot2)
library(lubridate)
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
## Estimates on the size of last-two-minute star bias, over time
lm_list = list()
for (index in 1:7)
{
YEAR = year_vec[index]
lm_list[index] <- lm(fouls_drawn ~ all_star + fouls_committed +
mp + tm_usg + ts + ws + ovorp + o_bpm + orb + drb + stl + blk + per +
ft_pc + yrs_experience + all_star + as.factor(bbref_pos),
data = Box_Data %>% filter(mp > 400) %>% filter(year == YEAR))
}
year_vec = 2009:2016
for (index in 1:7)
{
YEAR = year_vec[index]
lm_list[index] <- lm(fouls_drawn ~ all_star + fouls_committed +
mp + tm_usg + ts + ws + ovorp + o_bpm + orb + drb + stl + blk + per +
ft_pc + yrs_experience + all_star + as.factor(bbref_pos),
data = Box_Data %>% filter(mp > 400) %>% filter(year == YEAR))
}
Box_Data %>% filter(mp > 400) %>% filter(year == YEAR) %>% na.omit()
lm_list = list()
year_vec = 2009:2016
for (index in 1:7)
{
YEAR = year_vec[index]
lm_list[index] <- lm(fouls_drawn ~ all_star + fouls_committed +
mp + tm_usg + ts + ws + ovorp + o_bpm + orb + drb + stl + blk + per +
ft_pc + yrs_experience + all_star + as.factor(bbref_pos),
data = Box_Data %>% filter(mp > 400) %>% filter(year == YEAR) %>% na.omit())
}
stargazer(lm_list[[1]],lm_list[[2]],lm_list[[3]],lm_list[[4]],lm_list[[5]],lm_list[[6]],
lm_list[[7]],lm_list[[8]])
############
stargazer(lm_list[[1]],lm_list[[2]],lm_list[[3]],lm_list[[4]],lm_list[[5]],lm_list[[6]],
lm_list[[7]])
stargazer(lm_list)
lm_list
lm01 <- lm_list[[1]]
lm02 <- lm_list[[2]]
lm03 <- lm_list[[3]]
lm04 <- lm_list[[4]]
lm05 <- lm_list[[5]]
lm06 <- lm_list[[6]]
lm07 <- lm_list[[7]]
stargazer(lm01,lm02,lm03,lm04,lm05,lm06,lm07)
lm_list = list()
year_vec = 2009:2016
for (index in 1:7)
{
YEAR = year_vec[index]
lm_list[[index]] <- lm(fouls_drawn ~ all_star + fouls_committed +
mp + tm_usg + ts + ws + ovorp + o_bpm + orb + drb + stl + blk + per +
ft_pc + yrs_experience + all_star + as.factor(bbref_pos),
data = Box_Data %>% filter(mp > 400) %>% filter(year == YEAR) %>% na.omit())
}
lm01 <- lm_list[[1]]
lm02 <- lm_list[[2]]
lm03 <- lm_list[[3]]
lm04 <- lm_list[[4]]
lm05 <- lm_list[[5]]
lm06 <- lm_list[[6]]
lm07 <- lm_list[[7]]
stargazer(lm01,lm02,lm03,lm04,lm05,lm06,lm07)
lm_list = list()
year_vec = 2009:2016
for (index in 1:7)
{
YEAR = year_vec[index]
lm_list[[index]] <- lm(fouls_drawn ~ all_star + fouls_committed +
mp + tm_usg + ts + ws + ovorp + o_bpm + orb + drb + stl + blk + per +
ft_pc + yrs_experience + all_star + as.factor(bbref_pos),
data = Box_Data %>% filter(mp > 400) %>% filter(year == YEAR) %>% na.omit())
}
lm01 <- lm_list[[1]]
lm02 <- lm_list[[2]]
lm03 <- lm_list[[3]]
lm04 <- lm_list[[4]]
lm05 <- lm_list[[5]]
lm06 <- lm_list[[6]]
lm07 <- lm_list[[7]]
stargazer(lm01,lm02,lm03,lm04,lm05,lm06,lm07,
align = TRUE,
no.space = FALSE,
omit.stat=c("f", "ser"),
column.sep.width = "-5pt")
stargazer(lm01,lm02,lm03,lm04,lm05,lm06,lm07,
align = TRUE,
no.space = FALSE,
omit.stat=c("f", "ser"),
column.sep.width = "-8pt")
